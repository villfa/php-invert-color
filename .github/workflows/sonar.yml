name: "SonarCloud Analysis"

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request. 
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'tests/**'
      - 'sonar-project.properties'
      - '.github/workflows/sonar.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'sonar-project.properties'
      - '.github/workflows/sonar.yml'

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          tools: "composer:v2"
          php-version: "7.4"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
         echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress --prefer-dist"

      - name: "Calculate code coverage"
        run: "composer ut -- --coverage-clover=reports/coverage.clover --log-junit=reports/test.xml"

      - name: "Fix code coverage paths"
        working-directory: ./reports
        run: |
          sed -i 's/\/home\/runner\/work\/${{ github.event.repository.name }}\/${{ github.event.repository.name }}\///g' coverage.clover
          sed -i 's/\/home\/runner\/work\/${{ github.event.repository.name }}\/${{ github.event.repository.name }}\///g' test.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
